"""Initial migration - create trading system schema

Revision ID: 14452ee3c0ae
Revises: 
Create Date: 2025-03-04 02:07:45.445201

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '14452ee3c0ae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('margin_enabled', sa.Boolean(), nullable=True),
    sa.Column('margin_ratio', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('instruments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('EQUITY', 'BOND', 'FUTURES', name='instrumenttype'), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_price', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('daily_high', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('daily_low', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('daily_volume', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_table('bonds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issuer', sa.String(), nullable=True),
    sa.Column('maturity_date', sa.DateTime(), nullable=True),
    sa.Column('coupon_rate', sa.Float(), nullable=True),
    sa.Column('face_value', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('yield_to_maturity', sa.Float(), nullable=True),
    sa.Column('credit_rating', sa.String(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('pe_ratio', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('futures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('underlying', sa.String(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('contract_size', sa.Integer(), nullable=True),
    sa.Column('tick_size', sa.Float(), nullable=True),
    sa.Column('initial_margin', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('maintenance_margin', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('funding_rate', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('MARKET', 'LIMIT', 'STOP', 'STOP_LIMIT', name='ordertype'), nullable=False),
    sa.Column('side', sa.Enum('BUY', 'SELL', name='orderside'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'FILLED', 'PARTIALLY_FILLED', 'CANCELLED', 'REJECTED', name='orderstatus'), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('filled_quantity', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('price', sa.Numeric(precision=20, scale=8), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('average_entry_price', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('unrealized_pnl', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('realized_pnl', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('instrument_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('price', sa.Numeric(precision=20, scale=8), nullable=False),
    sa.Column('side', sa.Enum('BUY', 'SELL', name='orderside'), nullable=False),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['instrument_id'], ['instruments.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_table('positions')
    op.drop_table('orders')
    op.drop_table('futures')
    op.drop_table('equities')
    op.drop_table('bonds')
    op.drop_table('instruments')
    op.drop_table('accounts')
    # ### end Alembic commands ###
