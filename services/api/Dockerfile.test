FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY services/api/requirements.txt api-requirements.txt
COPY requirements.txt root-requirements.txt
RUN pip install --no-cache-dir -r api-requirements.txt -r root-requirements.txt pytest-cov httpx pytest-asyncio

# Create a simple directory structure for testing
RUN mkdir -p /app/src/database/models

# Copy application code
COPY services/api/ ./api/
COPY src/ ./src/
COPY tests/ ./tests/
COPY pytest.ini ./pytest.ini

# Set environment variables
ENV PYTHONPATH=/app:/app/services
ENV TEST_DATABASE_URL=postgresql://trading:trading@postgres:5432/trading_test

# Create a script to run tests with proper imports
RUN echo '#!/bin/bash\n\
python -c "\n\
import sys\n\
from pathlib import Path\n\
\n\
# Ensure the src directory is in the Python path\n\
sys.path.insert(0, str(Path(\".\").absolute()))\n\
\n\
# Create a simple __init__.py file in the models directory if it doesn't exist\n\
models_init = Path(\"src/database/models/__init__.py\")\n\
if not models_init.exists() or models_init.stat().st_size == 0:\n\
    with open(models_init, \"w\") as f:\n\
        f.write(\"# Auto-generated by test setup\\n\")\n\
"\n\
pytest "$@"' > /app/run_tests.sh && chmod +x /app/run_tests.sh

# Default command to run tests
CMD ["/app/run_tests.sh"]
